{"version":3,"file":"component---src-pages-items-drop-filter-js-f63b89c3fcf2db024f0e.js","mappings":"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","sources":["webpack://tkfmtools/./src/components/ResultTablePanel.js","webpack://tkfmtools/./src/data/byStageToItem.js","webpack://tkfmtools/./src/pages/items/drop/filter.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Scrollable from \"containers/Scrollable\";\r\nimport { useLanguage } from \"containers/LanguageProvider\";\r\nimport Header from \"components/Header\";\r\nimport SortableTable from \"components/SortableTable\";\r\n\r\nconst ResultTablePanel = ({\r\n  data,\r\n  head,\r\n  body,\r\n  sortFunc,\r\n  defaultSortKey,\r\n  handleModalOpen,\r\n  maxHeight,\r\n  striped,\r\n  headerEnd,\r\n}) => {\r\n  const { pageString } = useLanguage();\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        title={pageString.items.drop.filter.resultTitle}\r\n        withHelp\r\n        onClickHelp={handleModalOpen}\r\n        end={headerEnd}\r\n        border\r\n      />\r\n      <TableWrapper $maxHeight={maxHeight}>\r\n        <StyledSortableTable\r\n          data={data}\r\n          head={head}\r\n          body={body}\r\n          sortFunc={sortFunc}\r\n          defaultSortKey={defaultSortKey}\r\n          striped={striped}\r\n        />\r\n      </TableWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TableWrapper = styled(Scrollable)`\r\n  max-height: ${(props) => props.$maxHeight};\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n`;\r\nconst StyledSortableTable = styled(SortableTable)`\r\n  img {\r\n    width: 1.8rem;\r\n    height: 1.8rem;\r\n  }\r\n  td {\r\n    padding-left: 0.75rem;\r\n  }\r\n`;\r\n\r\nexport default ResultTablePanel;\r\n","import stageDropData from \"data/stageDrop.json\";\r\n\r\nlet itemDropData = {};\r\n\r\n// from stages\r\nstageDropData.forEach((chapter) => {\r\n  chapter.stages.forEach((stage) => {\r\n    const { materials, trainItems, expPotions, ...rest } = stage;\r\n\r\n    const dropItems = [materials, trainItems, expPotions];\r\n\r\n    dropItems.forEach((items) => {\r\n      items.forEach((item) => {\r\n        const newDrop = {\r\n          chapter: chapter.chapter,\r\n          rarity: item.rarity,\r\n          ...rest,\r\n        };\r\n\r\n        if (itemDropData[item.id]) {\r\n          itemDropData[item.id].drop.push(newDrop);\r\n        } else {\r\n          itemDropData[item.id] = {\r\n            drop: [newDrop],\r\n          };\r\n        }\r\n      });\r\n    });\r\n  });\r\n});\r\n\r\n// not available from stages\r\n//legendary items\r\n\r\nfor (let i = 1; i < 11; i++) {\r\n  itemDropData[(500 + i).toString()] = { drop: [] };\r\n}\r\n\r\n// skill items\r\nfor (let i = 1; i < 3; i++) {\r\n  itemDropData[(900 + i).toString()] = { drop: [] };\r\n}\r\n\r\nexport default itemDropData;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  TableHead as MuiTableHead,\r\n  TableBody as MuiTableBody,\r\n  TableRow as MuiTableRow,\r\n  TableCell as MuiTableCell,\r\n} from \"@material-ui/core\";\r\nimport Panels from \"containers/Panels\";\r\nimport { useLanguage } from \"containers/LanguageProvider\";\r\nimport Head from \"components/Head\";\r\nimport ResultTablePanel from \"components/ResultTablePanel\";\r\nimport { SortableTh } from \"components/SortableTable\";\r\nimport Header from \"components/Header\";\r\nimport { HeaderIconButton } from \"components/IconButton\";\r\nimport ToggleButtonGroup, { ToggleButton } from \"components/ToggleButtonGroup\";\r\nimport ImageSupplier from \"components/ImageSupplier\";\r\nimport { TextModal } from \"components/Modal\";\r\nimport { DeleteIcon } from \"components/icon\";\r\nimport itemDropData from \"data/byStageToItem\";\r\nimport stageDropData from \"data/stageDrop.json\";\r\n\r\nconst btnLayoutConfig = {\r\n  en: { 1360: 4, 992: 3, 768: 4, 624: 3, 0: 2 },\r\n  \"zh-TW\": { 1360: 5, 992: 4, 768: 5, 624: 4, 410: 3, 0: 2 },\r\n  ja: { 1360: 5, 992: 4, 768: 5, 624: 4, 410: 3, 0: 2 },\r\n  ko: { 1460: 5, 1200: 4, 1000: 3, 920: 5, 740: 4, 570: 3, 0: 2 },\r\n};\r\n\r\nconst ItemFilterPanel = ({ filterBtnValue, filterBy, clearBtnValue }) => {\r\n  const { userLanguage, pageString, itemString } = useLanguage();\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        title={pageString.items.drop.filter.itemPanelTitle}\r\n        end={\r\n          <HeaderIconButton\r\n            onClick={clearBtnValue}\r\n            tooltipText={pageString.items.drop.filter.deleteTooltip}\r\n          >\r\n            {DeleteIcon}\r\n          </HeaderIconButton>\r\n        }\r\n        border\r\n      />\r\n      <ToggleButtonGroup\r\n        value={filterBtnValue}\r\n        onChange={filterBy}\r\n        layoutConfig={btnLayoutConfig[userLanguage]}\r\n      >\r\n        {Object.entries(itemDropData).map(([id, data], ind) => {\r\n          if (data.drop.length === 0) return null;\r\n\r\n          return (\r\n            <StyledToggleButton value={id} key={ind}>\r\n              <ItemImg name={`item_${id}`} alt=\"\" />\r\n              {itemString.name[id]}\r\n            </StyledToggleButton>\r\n          );\r\n        })}\r\n      </ToggleButtonGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst StyledToggleButton = styled(ToggleButton)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 0.85rem;\r\n`;\r\nconst ItemImg = styled(ImageSupplier)`\r\n  width: 2.26rem;\r\n  height: 2.26rem;\r\n`;\r\n\r\nconst ItemTh = ({ requestSort, getSortDirection, data }) => {\r\n  const { pageString, itemString } = useLanguage();\r\n\r\n  if (data.length === 0) {\r\n    return <SortableTh>{pageString.items.drop.filter.tableHead[1]}</SortableTh>;\r\n  }\r\n\r\n  return Object.keys(data[0]).map((type, ind) => {\r\n    if (type === \"stage\" || type === \"energy\") {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <ImgTh\r\n        key={type}\r\n        onClick={() => requestSort(type)}\r\n        direction={getSortDirection(type)}\r\n      >\r\n        <TableImg name={`item_${type}`} alt={itemString.name[type]} />\r\n      </ImgTh>\r\n    );\r\n  });\r\n};\r\n\r\nconst ImgTh = styled(SortableTh)`\r\n  &:after {\r\n    position: absolute;\r\n    top: calc(50% - 0.75rem);\r\n    margin-left: 2rem;\r\n  }\r\n`;\r\nconst TableImg = styled(ImageSupplier)`\r\n  width: 1.8rem;\r\n  height: 1.8rem;\r\n`;\r\n\r\nconst TableHead = ({ requestSort, getSortDirection, sortedData }) => {\r\n  const { pageString } = useLanguage();\r\n\r\n  return (\r\n    <MuiTableHead>\r\n      <MuiTableRow>\r\n        <SortableTh\r\n          onClick={() => requestSort(\"stage\")}\r\n          direction={getSortDirection(\"stage\")}\r\n        >\r\n          {pageString.items.drop.filter.tableHead[0]}\r\n        </SortableTh>\r\n        <ItemTh\r\n          requestSort={requestSort}\r\n          getSortDirection={getSortDirection}\r\n          data={sortedData}\r\n        />\r\n        <ImgTh\r\n          onClick={() => requestSort(\"energy\")}\r\n          direction={getSortDirection(\"energy\")}\r\n        >\r\n          <TableImg\r\n            name=\"energy\"\r\n            alt={pageString.items.drop.filter.tableHead[2]}\r\n          />\r\n        </ImgTh>\r\n      </MuiTableRow>\r\n    </MuiTableHead>\r\n  );\r\n};\r\n\r\nconst TableBody = ({ sortedData }) => {\r\n  const { itemString } = useLanguage();\r\n\r\n  return (\r\n    <MuiTableBody>\r\n      {sortedData.map((stage, ind) => {\r\n        return (\r\n          <MuiTableRow hover key={stage.stage}>\r\n            <MuiTableCell>{stage.stage}</MuiTableCell>\r\n            {Object.entries(stage).map(([type, value], ind) => {\r\n              if (type === \"stage\" || type === \"energy\") {\r\n                return null;\r\n              }\r\n\r\n              return (\r\n                <MuiTableCell key={ind}>\r\n                  {itemString.rarity[value]}\r\n                </MuiTableCell>\r\n              );\r\n            })}\r\n            <MuiTableCell>{stage.energy}</MuiTableCell>\r\n          </MuiTableRow>\r\n        );\r\n      })}\r\n    </MuiTableBody>\r\n  );\r\n};\r\n\r\nconst sortFunc = (sortableItems, sortConfig) => {\r\n  const toStageKey = (stage) => {\r\n    const splits = stage.split(\"-\");\r\n\r\n    return (\r\n      parseInt(splits[0]) * 1000 +\r\n      parseInt(splits[1].split(\" \")[0]) * 10 +\r\n      (splits[1].includes(\"free\") ? 1 : 0) +\r\n      (splits.length > 2 ? parseInt(splits[2]) : 0)\r\n    );\r\n  };\r\n\r\n  sortableItems.sort((a, b) => {\r\n    let aKey;\r\n    let bKey;\r\n    if (sortConfig.key === \"stage\") {\r\n      aKey = toStageKey(a.stage);\r\n      bKey = toStageKey(b.stage);\r\n    } else {\r\n      aKey = a[sortConfig.key];\r\n      bKey = b[sortConfig.key];\r\n    }\r\n    if (aKey < bKey) {\r\n      return sortConfig.direction === \"asc\" ? -1 : 1;\r\n    }\r\n    if (aKey > bKey) {\r\n      return sortConfig.direction === \"asc\" ? 1 : -1;\r\n    }\r\n    return 0;\r\n  });\r\n};\r\n\r\nconst Filter = () => {\r\n  const { pageString } = useLanguage();\r\n\r\n  const [state, setState] = useState({\r\n    filterBtnValue: [],\r\n    data: [],\r\n    isHelpModalOpen: false,\r\n  });\r\n\r\n  const filterBy = (event, val) => {\r\n    if (val.length === 0) {\r\n      setState((state) => ({\r\n        ...state,\r\n        filterBtnValue: val,\r\n        data: [],\r\n      }));\r\n      return;\r\n    }\r\n\r\n    const stageDrop = [].concat(\r\n      ...stageDropData.map((chapter) =>\r\n        chapter.stages.map((stage) => {\r\n          const { materials, trainItems, expPotions, ...rest } = stage;\r\n          return {\r\n            ...rest,\r\n            drops: materials.concat(trainItems, expPotions),\r\n            chapter: chapter.chapter,\r\n          };\r\n        })\r\n      )\r\n    );\r\n\r\n    let filteredStages = stageDrop.filter((stage) =>\r\n      val.every((queryItem) => {\r\n        let flag = false;\r\n        stage.drops.forEach((drop) => {\r\n          if (drop.id === queryItem) {\r\n            flag = true;\r\n            return false;\r\n          }\r\n        });\r\n        return flag;\r\n      })\r\n    );\r\n\r\n    filteredStages = filteredStages.map((stage) => {\r\n      const parsedStage = stage.chapter + \"-\" + stage.stage;\r\n      const newStage = { stage: parsedStage, energy: stage.energy };\r\n      stage.drops.forEach((item) => {\r\n        if (val.includes(item.id)) {\r\n          newStage[item.id] = item.rarity;\r\n        }\r\n      });\r\n      return newStage;\r\n    });\r\n\r\n    setState((state) => ({\r\n      ...state,\r\n      filterBtnValue: val,\r\n      data: filteredStages,\r\n    }));\r\n  };\r\n\r\n  const handelHelpModal = (boolean) => () => {\r\n    setState((state) => ({\r\n      ...state,\r\n      isHelpModalOpen: boolean,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Head\r\n        title={pageString.items.drop.filter.helmet.title}\r\n        description={pageString.items.drop.filter.helmet.description}\r\n        path=\"/items/drop/filter/\"\r\n      />\r\n      <Panels panelsWidth={[\"62%\", \"38%\"]}>\r\n        <ItemFilterPanel\r\n          filterBtnValue={state.filterBtnValue}\r\n          filterBy={filterBy}\r\n          clearBtnValue={(e) => filterBy(e, [])}\r\n        />\r\n        <ResultTablePanel\r\n          data={state.data}\r\n          head={<TableHead />}\r\n          body={<TableBody />}\r\n          sortFunc={sortFunc}\r\n          defaultSortKey={state.filterBtnValue[0]}\r\n          handleModalOpen={handelHelpModal(true)}\r\n          maxHeight=\"calc(100vh - 16rem)\"\r\n          striped\r\n        />\r\n      </Panels>\r\n      <TextModal\r\n        title={pageString.items.drop.filter.helpModal.title}\r\n        open={state.isHelpModalOpen}\r\n        onClose={handelHelpModal(false)}\r\n        content={pageString.items.drop.filter.helpModal.content}\r\n        ariaLabelledby=\"help-modal-title\"\r\n        ariaDescribedby=\"help-modal-description\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n"],"names":["TableWrapper","styled","Scrollable","props","$maxHeight","StyledSortableTable","SortableTable","data","head","body","sortFunc","defaultSortKey","handleModalOpen","maxHeight","striped","headerEnd","pageString","useLanguage","title","items","drop","filter","resultTitle","withHelp","onClickHelp","end","border","itemDropData","stageDropData","chapter","stages","forEach","stage","materials","trainItems","expPotions","rest","item","newDrop","rarity","id","push","i","toString","btnLayoutConfig","en","ja","ko","ItemFilterPanel","filterBtnValue","filterBy","clearBtnValue","userLanguage","itemString","Header","itemPanelTitle","onClick","tooltipText","deleteTooltip","DeleteIcon","ToggleButtonGroup","value","onChange","layoutConfig","Object","entries","map","ind","length","StyledToggleButton","key","ItemImg","name","alt","ToggleButton","ImageSupplier","ItemTh","requestSort","getSortDirection","tableHead","keys","type","ImgTh","direction","TableImg","SortableTh","TableHead","sortedData","TableBody","hover","energy","sortableItems","sortConfig","toStageKey","splits","split","parseInt","includes","sort","a","b","aKey","bKey","state","setState","useState","isHelpModalOpen","event","val","filteredStages","concat","drops","every","queryItem","flag","newStage","handelHelpModal","boolean","Head","helmet","description","path","Panels","panelsWidth","e","ResultTablePanel","helpModal","open","onClose","content","ariaLabelledby","ariaDescribedby"],"sourceRoot":""}