{"version":3,"file":"component---src-pages-items-drop-filter-js-4071bf815483afdfcd35.js","mappings":"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","sources":["webpack://tkfmtools/./src/components/Modal.js","webpack://tkfmtools/./src/components/ResultTablePanel.js","webpack://tkfmtools/./src/data/byStageToItem.js","webpack://tkfmtools/./src/pages/items/drop/filter.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Backdrop, Fade, Modal as MuiModal } from \"@mui/material\";\r\nimport Scrollable from \"containers/Scrollable\";\r\nimport Header from \"components/Header\";\r\n\r\nexport const Modal = ({\r\n  children,\r\n  className,\r\n  title,\r\n  open,\r\n  onClose,\r\n  keepMounted,\r\n  ariaLabelledby,\r\n  ariaDescribedby,\r\n}) => (\r\n  <MuiModal\r\n    className={className}\r\n    open={open}\r\n    onClose={onClose}\r\n    closeAfterTransition\r\n    BackdropComponent={Backdrop}\r\n    BackdropProps={{ timeout: 500 }}\r\n    disableEnforceFocus\r\n    keepMounted={keepMounted}\r\n    aria-labelledby={ariaLabelledby}\r\n    aria-describedby={ariaDescribedby}\r\n  >\r\n    <Fade in={open}>\r\n      <ModalContentWrapper>\r\n        <ModalHeader\r\n          title={title}\r\n          id={ariaLabelledby}\r\n          end={<CloseWrapper onClick={onClose}>&times;</CloseWrapper>}\r\n        />\r\n        {children}\r\n      </ModalContentWrapper>\r\n    </Fade>\r\n  </MuiModal>\r\n);\r\n\r\nconst ModalContentWrapper = styled.div`\r\n  position: absolute;\r\n  top: 10%;\r\n  bottom: auto;\r\n  left: 0;\r\n  right: 0;\r\n  width: 70%;\r\n  @media screen and (max-width: 1000px) {\r\n    width: 80%;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    width: 90%;\r\n  }\r\n  height: auto;\r\n  margin: auto;\r\n  padding: 1rem;\r\n  background-color: ${({ theme }) => theme.colors.surface};\r\n  color: ${({ theme }) => theme.colors.onSurface};\r\n  border-radius: 0.25rem;\r\n  border: 1px solid ${({ theme }) => theme.colors.border};\r\n`;\r\nconst ModalHeader = styled(Header)`\r\n  margin: -1rem;\r\n  margin-bottom: 1rem;\r\n  padding: 0.2rem 0.5rem;\r\n  color: ${({ theme }) => theme.colors.onSecondary};\r\n  background-color: ${({ theme }) => theme.colors.secondary};\r\n`;\r\nconst CloseWrapper = styled.span`\r\n  cursor: pointer;\r\n  font-size: x-large;\r\n`;\r\n\r\nexport const ScrollableModal = ({\r\n  children,\r\n  className,\r\n  title,\r\n  open,\r\n  onClose,\r\n  keepMounted,\r\n  ariaLabelledby,\r\n  ariaDescribedby,\r\n}) => (\r\n  <StyledScrollableModal\r\n    className={className}\r\n    title={title}\r\n    open={open}\r\n    onClose={onClose}\r\n    keepMounted={keepMounted}\r\n    ariaLabelledby={ariaLabelledby}\r\n    ariaDescribedby={ariaDescribedby}\r\n  >\r\n    <Scrollable>{children}</Scrollable>\r\n  </StyledScrollableModal>\r\n);\r\n\r\nconst StyledScrollableModal = styled(Modal)`\r\n  > div:nth-child(3) > div {\r\n    max-height: calc(80vh - 2rem);\r\n  }\r\n`;\r\n\r\nconst TextModalContent = ({ content, ariaDescribedby }) =>\r\n  content.map((item, ind) => (\r\n    <React.Fragment key={ind}>\r\n      <Header title={item.title} border />\r\n      <ModalBody>\r\n        {item.content.map((text, ind) => (\r\n          <p key={ind} id={ariaDescribedby + \"_\" + ind}>\r\n            {text}\r\n          </p>\r\n        ))}\r\n      </ModalBody>\r\n    </React.Fragment>\r\n  ));\r\n\r\nconst ModalBody = styled.div`\r\n  margin: 1rem 0;\r\n`;\r\n\r\nexport const TextModal = ({\r\n  title,\r\n  content,\r\n  open,\r\n  onClose,\r\n  ariaLabelledby,\r\n  ariaDescribedby,\r\n}) => (\r\n  <ScrollableModal\r\n    title={title}\r\n    open={open}\r\n    onClose={onClose}\r\n    ariaLabelledby={ariaLabelledby}\r\n    ariaDescribedby={[...Array(content.length).keys()]\r\n      .map((i) => ariaDescribedby + \"_\" + i)\r\n      .join(\" \")}\r\n  >\r\n    <TextModalContent content={content} ariaDescribedby={ariaDescribedby} />\r\n  </ScrollableModal>\r\n);\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Scrollable from \"containers/Scrollable\";\r\nimport { useLanguage } from \"containers/LanguageProvider\";\r\nimport Header from \"components/Header\";\r\nimport SortableTable from \"components/SortableTable\";\r\n\r\nconst ResultTablePanel = ({\r\n  data,\r\n  head,\r\n  body,\r\n  sortFunc,\r\n  defaultSortKey,\r\n  maxHeight,\r\n  striped,\r\n  headerEnd,\r\n  helpModal,\r\n}) => {\r\n  const { pageString } = useLanguage();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        title={pageString.items.drop.filter.resultTitle}\r\n        withHelp\r\n        onClickHelp={() => setOpen(true)}\r\n        end={headerEnd}\r\n        border\r\n      />\r\n      <TableWrapper $maxHeight={maxHeight}>\r\n        <StyledSortableTable\r\n          data={data}\r\n          head={head}\r\n          body={body}\r\n          sortFunc={sortFunc}\r\n          defaultSortKey={defaultSortKey}\r\n          striped={striped}\r\n        />\r\n      </TableWrapper>\r\n      {helpModal &&\r\n        React.cloneElement(helpModal, { open, onClose: () => setOpen(false) })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst TableWrapper = styled(Scrollable)`\r\n  max-height: ${(props) => props.$maxHeight};\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n`;\r\nconst StyledSortableTable = styled(SortableTable)`\r\n  img {\r\n    width: 1.8rem;\r\n    height: 1.8rem;\r\n  }\r\n  td {\r\n    padding-left: 0.75rem;\r\n  }\r\n`;\r\n\r\nexport default ResultTablePanel;\r\n","import stageDropData from \"data/stageDrop.json\";\r\n\r\nlet itemDropData = {};\r\n\r\n// from stages\r\nstageDropData.forEach((chapter) => {\r\n  chapter.stages.forEach((stage) => {\r\n    const { materials, trainItems, expPotions, ...rest } = stage;\r\n\r\n    const dropItems = [materials, trainItems, expPotions];\r\n\r\n    dropItems.forEach((items) => {\r\n      items.forEach((item) => {\r\n        const newDrop = {\r\n          chapter: chapter.chapter,\r\n          rarity: item.rarity,\r\n          ...rest,\r\n        };\r\n\r\n        if (itemDropData[item.id]) {\r\n          itemDropData[item.id].drop.push(newDrop);\r\n        } else {\r\n          itemDropData[item.id] = {\r\n            drop: [newDrop],\r\n          };\r\n        }\r\n      });\r\n    });\r\n  });\r\n});\r\n\r\n// not available from stages\r\n//legendary items\r\n\r\nfor (let i = 1; i < 11; i++) {\r\n  itemDropData[(500 + i).toString()] = { drop: [] };\r\n}\r\n\r\n// skill items\r\nfor (let i = 1; i < 3; i++) {\r\n  itemDropData[(900 + i).toString()] = { drop: [] };\r\n}\r\n\r\nexport default itemDropData;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  TableHead as MuiTableHead,\r\n  TableBody as MuiTableBody,\r\n  TableRow as MuiTableRow,\r\n  TableCell as MuiTableCell,\r\n} from \"@mui/material\";\r\nimport Panels from \"containers/Panels\";\r\nimport { useLanguage } from \"containers/LanguageProvider\";\r\nimport ResultTablePanel from \"components/ResultTablePanel\";\r\nimport { SortableTh } from \"components/SortableTable\";\r\nimport Header from \"components/Header\";\r\nimport { HeaderIconButton } from \"components/IconButton\";\r\nimport ToggleButtonGroup, { ToggleButton } from \"components/ToggleButtonGroup\";\r\nimport ImageSupplier from \"components/ImageSupplier\";\r\nimport { TextModal } from \"components/Modal\";\r\nimport { DeleteIcon } from \"components/icon\";\r\nimport itemDropData from \"data/byStageToItem\";\r\nimport stageDropData from \"data/stageDrop.json\";\r\n\r\nconst ItemFilterPanel = ({ filterBtnValue, filterBy, clearBtnValue }) => {\r\n  const { userLanguage, pageString, itemString } = useLanguage();\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        title={pageString.items.drop.filter.itemPanelTitle}\r\n        end={\r\n          <HeaderIconButton\r\n            onClick={clearBtnValue}\r\n            tooltipText={pageString.items.drop.filter.deleteTooltip}\r\n          >\r\n            {DeleteIcon}\r\n          </HeaderIconButton>\r\n        }\r\n        border\r\n      />\r\n      <ToggleButtonGroup\r\n        value={filterBtnValue}\r\n        onChange={filterBy}\r\n        $lang={userLanguage}\r\n        $type=\"ITEM_DROPS_FILTER\"\r\n      >\r\n        {Object.entries(itemDropData).map(([id, data], ind) => {\r\n          if (data.drop.length === 0) return null;\r\n\r\n          return (\r\n            <StyledToggleButton value={id} key={ind}>\r\n              <ItemImg name={`item_${id}`} alt=\"\" />\r\n              {itemString.name[id]}\r\n            </StyledToggleButton>\r\n          );\r\n        })}\r\n      </ToggleButtonGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst StyledToggleButton = styled(ToggleButton)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 0.85rem;\r\n`;\r\nconst ItemImg = styled(ImageSupplier)`\r\n  width: 2.26rem;\r\n  height: 2.26rem;\r\n`;\r\n\r\nconst ItemTh = ({ requestSort, getSortDirection, data }) => {\r\n  const { pageString, itemString } = useLanguage();\r\n\r\n  if (data.length === 0) {\r\n    return <SortableTh>{pageString.items.drop.filter.tableHead[1]}</SortableTh>;\r\n  }\r\n\r\n  return Object.keys(data[0]).map((type, ind) => {\r\n    if (type === \"stage\" || type === \"energy\") {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <ImgTh\r\n        key={type}\r\n        onClick={() => requestSort(type)}\r\n        direction={getSortDirection(type)}\r\n      >\r\n        <TableImg name={`item_${type}`} alt={itemString.name[type]} />\r\n      </ImgTh>\r\n    );\r\n  });\r\n};\r\n\r\nconst ImgTh = styled(SortableTh)`\r\n  &:after {\r\n    position: absolute;\r\n    top: calc(50% - 0.75rem);\r\n    margin-left: 2rem;\r\n  }\r\n`;\r\nconst TableImg = styled(ImageSupplier)`\r\n  width: 1.8rem;\r\n  height: 1.8rem;\r\n`;\r\n\r\nconst TableHead = ({ requestSort, getSortDirection, sortedData }) => {\r\n  const { pageString } = useLanguage();\r\n\r\n  return (\r\n    <MuiTableHead>\r\n      <MuiTableRow>\r\n        <SortableTh\r\n          onClick={() => requestSort(\"stage\")}\r\n          direction={getSortDirection(\"stage\")}\r\n        >\r\n          {pageString.items.drop.filter.tableHead[0]}\r\n        </SortableTh>\r\n        <ItemTh\r\n          requestSort={requestSort}\r\n          getSortDirection={getSortDirection}\r\n          data={sortedData}\r\n        />\r\n        <ImgTh\r\n          onClick={() => requestSort(\"energy\")}\r\n          direction={getSortDirection(\"energy\")}\r\n        >\r\n          <TableImg\r\n            name=\"energy\"\r\n            alt={pageString.items.drop.filter.tableHead[2]}\r\n          />\r\n        </ImgTh>\r\n      </MuiTableRow>\r\n    </MuiTableHead>\r\n  );\r\n};\r\n\r\nconst TableBody = ({ sortedData }) => {\r\n  const { itemString } = useLanguage();\r\n\r\n  return (\r\n    <MuiTableBody>\r\n      {sortedData.map((stage, ind) => {\r\n        return (\r\n          <MuiTableRow hover key={stage.stage}>\r\n            <MuiTableCell>{stage.stage}</MuiTableCell>\r\n            {Object.entries(stage).map(([type, value], ind) => {\r\n              if (type === \"stage\" || type === \"energy\") {\r\n                return null;\r\n              }\r\n\r\n              return (\r\n                <MuiTableCell key={ind}>\r\n                  {itemString.rarity[value]}\r\n                </MuiTableCell>\r\n              );\r\n            })}\r\n            <MuiTableCell>{stage.energy}</MuiTableCell>\r\n          </MuiTableRow>\r\n        );\r\n      })}\r\n    </MuiTableBody>\r\n  );\r\n};\r\n\r\nconst HelpModal = ({ open, onClose }) => {\r\n  const { pageString } = useLanguage();\r\n\r\n  return (\r\n    <TextModal\r\n      title={pageString.items.drop.filter.helpModal.title}\r\n      open={open}\r\n      onClose={onClose}\r\n      content={pageString.items.drop.filter.helpModal.content}\r\n      ariaLabelledby=\"help-modal-title\"\r\n      ariaDescribedby=\"help-modal-description\"\r\n    />\r\n  );\r\n};\r\n\r\nconst toStageKey = (stage) => {\r\n  const splits = stage.split(\"-\");\r\n\r\n  return (\r\n    parseInt(splits[0]) * 1000 +\r\n    parseInt(splits[1].split(\" \")[0]) * 10 +\r\n    (splits[1].includes(\"free\") ? 1 : 0) +\r\n    (splits.length > 2 ? parseInt(splits[2]) : 0)\r\n  );\r\n};\r\n\r\nconst sortFunc = (sortableItems, sortConfig) => {\r\n  sortableItems.sort((a, b) => {\r\n    let aKey;\r\n    let bKey;\r\n    if (sortConfig.key === \"stage\") {\r\n      aKey = toStageKey(a.stage);\r\n      bKey = toStageKey(b.stage);\r\n    } else {\r\n      aKey = a[sortConfig.key];\r\n      bKey = b[sortConfig.key];\r\n    }\r\n    if (aKey < bKey) {\r\n      return sortConfig.direction === \"asc\" ? -1 : 1;\r\n    }\r\n    if (aKey > bKey) {\r\n      return sortConfig.direction === \"asc\" ? 1 : -1;\r\n    }\r\n    return 0;\r\n  });\r\n};\r\n\r\nconst Filter = () => {\r\n  const [state, setState] = useState({\r\n    filterBtnValue: [],\r\n    data: [],\r\n  });\r\n\r\n  const filterBy = (event, val) => {\r\n    if (val.length === 0) {\r\n      setState((state) => ({\r\n        ...state,\r\n        filterBtnValue: val,\r\n        data: [],\r\n      }));\r\n      return;\r\n    }\r\n\r\n    const stageDrop = [].concat(\r\n      ...stageDropData.map((chapter) =>\r\n        chapter.stages.map((stage) => {\r\n          const { materials, trainItems, expPotions, ...rest } = stage;\r\n          return {\r\n            ...rest,\r\n            drops: materials.concat(trainItems, expPotions),\r\n            chapter: chapter.chapter,\r\n          };\r\n        })\r\n      )\r\n    );\r\n\r\n    let filteredStages = stageDrop.filter((stage) =>\r\n      val.every((queryItem) => {\r\n        let flag = false;\r\n        stage.drops.forEach((drop) => {\r\n          if (drop.id === queryItem) {\r\n            flag = true;\r\n            return false;\r\n          }\r\n        });\r\n        return flag;\r\n      })\r\n    );\r\n\r\n    filteredStages = filteredStages.map((stage) => {\r\n      const parsedStage = `${stage.chapter}-${stage.stage}`;\r\n      const newStage = { stage: parsedStage, energy: stage.energy };\r\n      stage.drops.forEach((item) => {\r\n        if (val.includes(item.id)) {\r\n          newStage[item.id] = item.rarity;\r\n        }\r\n      });\r\n      return newStage;\r\n    });\r\n\r\n    setState((state) => ({\r\n      ...state,\r\n      filterBtnValue: val,\r\n      data: filteredStages,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Panels panelsWidth={[\"62%\", \"38%\"]}>\r\n        <ItemFilterPanel\r\n          filterBtnValue={state.filterBtnValue}\r\n          filterBy={filterBy}\r\n          clearBtnValue={(e) => filterBy(e, [])}\r\n        />\r\n        <ResultTablePanel\r\n          data={state.data}\r\n          head={<TableHead />}\r\n          body={<TableBody />}\r\n          sortFunc={sortFunc}\r\n          defaultSortKey={state.filterBtnValue[0]}\r\n          maxHeight=\"calc(100vh - 16rem)\"\r\n          striped\r\n          helpModal={<HelpModal />}\r\n        />\r\n      </Panels>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n"],"names":["Modal","children","className","title","open","onClose","keepMounted","ariaLabelledby","ariaDescribedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","disableEnforceFocus","in","ModalContentWrapper","ModalHeader","id","end","CloseWrapper","onClick","styled","theme","colors","surface","onSurface","border","Header","onSecondary","secondary","ScrollableModal","StyledScrollableModal","TextModalContent","content","map","item","ind","key","ModalBody","text","TextModal","Array","length","keys","i","join","TableWrapper","Scrollable","props","$maxHeight","StyledSortableTable","SortableTable","data","head","body","sortFunc","defaultSortKey","maxHeight","striped","headerEnd","helpModal","pageString","useLanguage","setOpen","useState","items","drop","filter","resultTitle","withHelp","onClickHelp","React","itemDropData","stageDropData","chapter","stages","forEach","stage","materials","trainItems","expPotions","rest","newDrop","rarity","push","toString","ItemFilterPanel","filterBtnValue","filterBy","clearBtnValue","userLanguage","itemString","itemPanelTitle","tooltipText","deleteTooltip","DeleteIcon","ToggleButtonGroup","value","onChange","$lang","$type","Object","entries","StyledToggleButton","ItemImg","name","alt","ToggleButton","ImageSupplier","ItemTh","requestSort","getSortDirection","tableHead","type","ImgTh","direction","TableImg","SortableTh","TableHead","sortedData","TableBody","hover","energy","HelpModal","toStageKey","splits","split","parseInt","includes","sortableItems","sortConfig","sort","a","b","aKey","bKey","state","setState","event","val","filteredStages","concat","drops","every","queryItem","flag","newStage","Panels","panelsWidth","e","ResultTablePanel"],"sourceRoot":""}