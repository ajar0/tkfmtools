{"version":3,"file":"component---src-pages-items-drop-filter-js-b47698fad3a72c157a53.js","mappings":"kLA8CMA,GAAeC,EAAAA,EAAAA,SAAOC,EAAAA,GAAV,oFAAGD,CAAH,uDACDE,GAAUA,EAAMC,aAI3BC,GAAsBJ,EAAAA,EAAAA,SAAOK,EAAAA,IAAV,2FAAGL,CAAH,+DAUzB,IAtDyB,IAUlB,IAVmB,KACxBM,EADwB,KAExBC,EAFwB,KAGxBC,EAHwB,SAIxBC,EAJwB,eAKxBC,EALwB,UAMxBC,EANwB,QAOxBC,EAPwB,UAQxBC,EARwB,UASxBC,GACI,GACE,WAAEC,IAAeC,EAAAA,EAAAA,MACjB,EAACC,EAAD,EAAOC,IAAWC,EAAAA,EAAAA,WAAS,GAEjC,OACE,gCACE,gBAAC,KAAD,CACEC,MAAOL,EAAWM,MAAMC,KAAKC,OAAOC,YACpCC,UAAQ,EACRC,YAAa,IAAMR,GAAQ,GAC3BS,IAAKd,EACLe,QAAM,IAER,gBAAC7B,EAAD,CAAcI,WAAYQ,GACxB,gBAACP,EAAD,CACEE,KAAMA,EACNC,KAAMA,EACNC,KAAMA,EACNC,SAAUA,EACVC,eAAgBA,EAChBE,QAASA,KAGZE,GACCe,EAAAA,aAAmBf,EAAW,CAAEG,KAAAA,EAAMa,QAAS,IAAMZ,GAAQ,Q,8hBCvCrE,IAAIa,EAAe,GAGnBC,EAAAA,SAAuBC,IACrBA,EAAQC,OAAOC,SAASC,IACtB,IAAM,UAAEC,EAAF,WAAaC,EAAb,WAAyBC,GAAwBH,EAATI,GAA9C,OAAuDJ,EAAvD,GAEkB,CAACC,EAAWC,EAAYC,GAEhCJ,SAASd,IACjBA,EAAMc,SAASM,IACb,IAAMC,E,qWAAO,EACXT,QAASA,EAAQA,QACjBU,OAAQF,EAAKE,QACVH,GAGDT,EAAaU,EAAKG,IACpBb,EAAaU,EAAKG,IAAItB,KAAKuB,KAAKH,GAEhCX,EAAaU,EAAKG,IAAM,CACtBtB,KAAM,CAACoB,gBAWnB,IAAK,IAAII,EAAI,EAAGA,EAAI,GAAIA,IACtBf,GAAc,IAAMe,GAAGC,YAAc,CAAEzB,KAAM,IAI/C,IAAK,IAAIwB,EAAI,EAAGA,EAAI,EAAGA,IACrBf,GAAc,IAAMe,GAAGC,YAAc,CAAEzB,KAAM,IAG/C,Q,+mBCtBA,IAAM0B,EAAkB,IAAkD,IAAjD,eAAEC,EAAF,SAAkBC,EAAlB,cAA4BC,GAAoB,GACjE,aAAEC,EAAF,WAAgBrC,EAAhB,WAA4BsC,IAAerC,EAAAA,EAAAA,KAEjD,OACE,gCACE,gBAACsC,EAAA,GAAD,CACElC,MAAOL,EAAWM,MAAMC,KAAKC,OAAOgC,eACpC5B,IACE,gBAAC,KAAD,CACE6B,QAASL,EACTM,YAAa1C,EAAWM,MAAMC,KAAKC,OAAOmC,eAEzCC,EAAAA,IAGL/B,QAAM,IAER,gBAACgC,EAAA,EAAD,CACEC,MAAOZ,EACPa,SAAUZ,EACVa,MAAOX,EACPY,MAAM,qBAELC,OAAOC,QAAQnC,GAAcoC,KAAI,CAAC,EAAYC,KAAS,IAApBxB,EAAItC,GAAe,EACrD,OAAyB,IAArBA,EAAKgB,KAAK+C,OAAqB,KAGjC,gBAACC,EAAD,CAAoBT,MAAOjB,EAAI2B,IAAKH,GAClC,gBAACI,EAAD,CAASC,KAAI,QAAU7B,EAAM8B,IAAI,KAChCrB,EAAWoB,KAAK7B,UASzB0B,GAAqBtE,EAAAA,EAAAA,SAAO2E,EAAAA,GAAV,iFAAG3E,CAAH,+EAMlBwE,GAAUxE,EAAAA,EAAAA,SAAO4E,EAAAA,GAAV,sEAAG5E,CAAH,mCAKP6E,EAAS,IAA8C,IAA7C,YAAEC,EAAF,iBAAeC,EAAf,KAAiCzE,GAAW,GACpD,WAAES,EAAF,WAAcsC,IAAerC,EAAAA,EAAAA,KAEnC,OAAoB,IAAhBV,EAAK+D,OACA,gBAAC,KAAD,KAAatD,EAAWM,MAAMC,KAAKC,OAAOyD,UAAU,IAGtDf,OAAOgB,KAAK3E,EAAK,IAAI6D,KAAI,CAACe,EAAMd,IACxB,UAATc,GAA6B,WAATA,EACf,KAIP,gBAACC,EAAD,CACEZ,IAAKW,EACL1B,QAAS,IAAMsB,EAAYI,GAC3BE,UAAWL,EAAiBG,IAE5B,gBAACG,EAAD,CAAUZ,KAAI,QAAUS,EAAQR,IAAKrB,EAAWoB,KAAKS,SAMvDC,GAAQnF,EAAAA,EAAAA,SAAOsF,EAAAA,IAAV,oEAAGtF,CAAH,0EAOLqF,GAAWrF,EAAAA,EAAAA,SAAO4E,EAAAA,GAAV,uEAAG5E,CAAH,iCAKRuF,EAAY,IAAoD,IAAnD,YAAET,EAAF,iBAAeC,EAAf,WAAiCS,GAAiB,GAC7D,WAAEzE,IAAeC,EAAAA,EAAAA,KAEvB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,gBAAC,KAAD,CACEwC,QAAS,IAAMsB,EAAY,SAC3BM,UAAWL,EAAiB,UAE3BhE,EAAWM,MAAMC,KAAKC,OAAOyD,UAAU,IAE1C,gBAACH,EAAD,CACEC,YAAaA,EACbC,iBAAkBA,EAClBzE,KAAMkF,IAER,gBAACL,EAAD,CACE3B,QAAS,IAAMsB,EAAY,UAC3BM,UAAWL,EAAiB,WAE5B,gBAACM,EAAD,CACEZ,KAAK,SACLC,IAAK3D,EAAWM,MAAMC,KAAKC,OAAOyD,UAAU,SAQlDS,EAAY,IAAqB,IAApB,WAAED,GAAiB,GAC9B,WAAEnC,IAAerC,EAAAA,EAAAA,KAEvB,OACE,gBAAC,IAAD,KACGwE,EAAWrB,KAAI,CAAC/B,EAAOgC,IAEpB,gBAAC,IAAD,CAAasB,OAAK,EAACnB,IAAKnC,EAAMA,OAC5B,gBAAC,IAAD,KAAeA,EAAMA,OACpB6B,OAAOC,QAAQ9B,GAAO+B,KAAI,CAAC,EAAeC,KAAS,IAAvBc,EAAMrB,GAAgB,EACjD,MAAa,UAATqB,GAA6B,WAATA,EACf,KAIP,gBAAC,IAAD,CAAcX,IAAKH,GAChBf,EAAWV,OAAOkB,OAIzB,gBAAC,IAAD,KAAezB,EAAMuD,aAQ3BC,EAAY,IAAwB,IAAvB,KAAE3E,EAAF,QAAQa,GAAc,GACjC,WAAEf,IAAeC,EAAAA,EAAAA,KAEvB,OACE,gBAAC,KAAD,CACEI,MAAOL,EAAWM,MAAMC,KAAKC,OAAOT,UAAUM,MAC9CH,KAAMA,EACNa,QAASA,EACT+D,QAAS9E,EAAWM,MAAMC,KAAKC,OAAOT,UAAU+E,QAChDC,eAAe,mBACfC,gBAAgB,4BAKhBC,EAAc5D,IAClB,IAAM6D,EAAS7D,EAAM8D,MAAM,KAE3B,OACwB,IAAtBC,SAASF,EAAO,IACoB,GAApCE,SAASF,EAAO,GAAGC,MAAM,KAAK,KAC7BD,EAAO,GAAGG,SAAS,QAAU,EAAI,IACjCH,EAAO5B,OAAS,EAAI8B,SAASF,EAAO,IAAM,IAIzCxF,EAAW,CAAC4F,EAAeC,KAC/BD,EAAcE,MAAK,CAACC,EAAGC,KACrB,IAAIC,EACAC,EAQJ,MAPuB,UAAnBL,EAAW/B,KACbmC,EAAOV,EAAWQ,EAAEpE,OACpBuE,EAAOX,EAAWS,EAAErE,SAEpBsE,EAAOF,EAAEF,EAAW/B,KACpBoC,EAAOF,EAAEH,EAAW/B,MAElBmC,EAAOC,EACuB,QAAzBL,EAAWlB,WAAuB,EAAI,EAE3CsB,EAAOC,EACuB,QAAzBL,EAAWlB,UAAsB,GAAK,EAExC,MAuFX,EAnFe,KACb,IAAM,EAACwB,EAAD,EAAQC,IAAY1F,EAAAA,EAAAA,UAAS,CACjC8B,eAAgB,GAChB3C,KAAM,KAGF4C,EAAW,CAAC4D,EAAOC,KACvB,GAAmB,IAAfA,EAAI1C,OAAR,CASA,IAaI2C,EAbc,GAAGC,UAChBjF,EAAAA,KAAmBC,GACpBA,EAAQC,OAAOiC,KAAK/B,IAClB,IAAM,UAAEC,EAAF,WAAaC,EAAb,WAAyBC,GAAwBH,EACvD,OAAO,QADP,OAAuDA,EAAvD,IACA,IAEE8E,MAAO7E,EAAU4E,OAAO3E,EAAYC,GACpCN,QAASA,EAAQA,gBAMMV,QAAQa,GACrC2E,EAAII,OAAOC,IACT,IAAIC,GAAO,EAOX,OANAjF,EAAM8E,MAAM/E,SAASb,IACnB,GAAIA,EAAKsB,KAAOwE,EAEd,OADAC,GAAO,GACA,KAGJA,OAIXL,EAAiBA,EAAe7C,KAAK/B,IACnC,IACMkF,EAAW,CAAElF,MADIA,EAAMH,QAAZ,IAAuBG,EAAMA,MACPuD,OAAQvD,EAAMuD,QAMrD,OALAvD,EAAM8E,MAAM/E,SAASM,IACfsE,EAAIX,SAAS3D,EAAKG,MACpB0E,EAAS7E,EAAKG,IAAMH,EAAKE,WAGtB2E,KAGTT,GAAUD,GAAD,EAAC,KACLA,GADI,IAEP3D,eAAgB8D,EAChBzG,KAAM0G,WAhDNH,GAAUD,GAAD,EAAC,KACLA,GADI,IAEP3D,eAAgB8D,EAChBzG,KAAM,QAiDZ,OACE,gCACE,gBAACiH,EAAA,EAAD,CAAQC,YAAa,CAAC,MAAO,QAC3B,gBAACxE,EAAD,CACEC,eAAgB2D,EAAM3D,eACtBC,SAAUA,EACVC,cAAgBsE,GAAMvE,EAASuE,EAAG,MAEpC,gBAACC,EAAA,EAAD,CACEpH,KAAMsG,EAAMtG,KACZC,KAAM,gBAAC,EAAD,MACNC,KAAM,gBAAC,EAAD,MACNC,SAAUA,EACVC,eAAgBkG,EAAM3D,eAAe,GACrCtC,UAAU,sBACVC,SAAO,EACPE,UAAW,gBAAC8E,EAAD","sources":["webpack://tkfmtools/./src/components/ResultTablePanel.js","webpack://tkfmtools/./src/data/byStageToItem.js","webpack://tkfmtools/./src/pages/items/drop/filter.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Scrollable from \"containers/Scrollable\";\r\nimport { useLanguage } from \"containers/LanguageProvider\";\r\nimport Header from \"components/Header\";\r\nimport SortableTable from \"components/SortableTable\";\r\n\r\nconst ResultTablePanel = ({\r\n  data,\r\n  head,\r\n  body,\r\n  sortFunc,\r\n  defaultSortKey,\r\n  maxHeight,\r\n  striped,\r\n  headerEnd,\r\n  helpModal,\r\n}) => {\r\n  const { pageString } = useLanguage();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        title={pageString.items.drop.filter.resultTitle}\r\n        withHelp\r\n        onClickHelp={() => setOpen(true)}\r\n        end={headerEnd}\r\n        border\r\n      />\r\n      <TableWrapper $maxHeight={maxHeight}>\r\n        <StyledSortableTable\r\n          data={data}\r\n          head={head}\r\n          body={body}\r\n          sortFunc={sortFunc}\r\n          defaultSortKey={defaultSortKey}\r\n          striped={striped}\r\n        />\r\n      </TableWrapper>\r\n      {helpModal &&\r\n        React.cloneElement(helpModal, { open, onClose: () => setOpen(false) })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst TableWrapper = styled(Scrollable)`\r\n  max-height: ${(props) => props.$maxHeight};\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n`;\r\nconst StyledSortableTable = styled(SortableTable)`\r\n  img {\r\n    width: 1.8rem;\r\n    height: 1.8rem;\r\n  }\r\n  td {\r\n    padding-left: 0.75rem;\r\n  }\r\n`;\r\n\r\nexport default ResultTablePanel;\r\n","import stageDropData from \"data/stageDrop.json\";\r\n\r\nlet itemDropData = {};\r\n\r\n// from stages\r\nstageDropData.forEach((chapter) => {\r\n  chapter.stages.forEach((stage) => {\r\n    const { materials, trainItems, expPotions, ...rest } = stage;\r\n\r\n    const dropItems = [materials, trainItems, expPotions];\r\n\r\n    dropItems.forEach((items) => {\r\n      items.forEach((item) => {\r\n        const newDrop = {\r\n          chapter: chapter.chapter,\r\n          rarity: item.rarity,\r\n          ...rest,\r\n        };\r\n\r\n        if (itemDropData[item.id]) {\r\n          itemDropData[item.id].drop.push(newDrop);\r\n        } else {\r\n          itemDropData[item.id] = {\r\n            drop: [newDrop],\r\n          };\r\n        }\r\n      });\r\n    });\r\n  });\r\n});\r\n\r\n// not available from stages\r\n//legendary items\r\n\r\nfor (let i = 1; i < 11; i++) {\r\n  itemDropData[(500 + i).toString()] = { drop: [] };\r\n}\r\n\r\n// skill items\r\nfor (let i = 1; i < 3; i++) {\r\n  itemDropData[(900 + i).toString()] = { drop: [] };\r\n}\r\n\r\nexport default itemDropData;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  TableHead as MuiTableHead,\r\n  TableBody as MuiTableBody,\r\n  TableRow as MuiTableRow,\r\n  TableCell as MuiTableCell,\r\n} from \"@material-ui/core\";\r\nimport Panels from \"containers/Panels\";\r\nimport { useLanguage } from \"containers/LanguageProvider\";\r\nimport ResultTablePanel from \"components/ResultTablePanel\";\r\nimport { SortableTh } from \"components/SortableTable\";\r\nimport Header from \"components/Header\";\r\nimport { HeaderIconButton } from \"components/IconButton\";\r\nimport ToggleButtonGroup, { ToggleButton } from \"components/ToggleButtonGroup\";\r\nimport ImageSupplier from \"components/ImageSupplier\";\r\nimport { TextModal } from \"components/Modal\";\r\nimport { DeleteIcon } from \"components/icon\";\r\nimport itemDropData from \"data/byStageToItem\";\r\nimport stageDropData from \"data/stageDrop.json\";\r\n\r\nconst ItemFilterPanel = ({ filterBtnValue, filterBy, clearBtnValue }) => {\r\n  const { userLanguage, pageString, itemString } = useLanguage();\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        title={pageString.items.drop.filter.itemPanelTitle}\r\n        end={\r\n          <HeaderIconButton\r\n            onClick={clearBtnValue}\r\n            tooltipText={pageString.items.drop.filter.deleteTooltip}\r\n          >\r\n            {DeleteIcon}\r\n          </HeaderIconButton>\r\n        }\r\n        border\r\n      />\r\n      <ToggleButtonGroup\r\n        value={filterBtnValue}\r\n        onChange={filterBy}\r\n        $lang={userLanguage}\r\n        $type=\"ITEM_DROPS_FILTER\"\r\n      >\r\n        {Object.entries(itemDropData).map(([id, data], ind) => {\r\n          if (data.drop.length === 0) return null;\r\n\r\n          return (\r\n            <StyledToggleButton value={id} key={ind}>\r\n              <ItemImg name={`item_${id}`} alt=\"\" />\r\n              {itemString.name[id]}\r\n            </StyledToggleButton>\r\n          );\r\n        })}\r\n      </ToggleButtonGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst StyledToggleButton = styled(ToggleButton)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 0.85rem;\r\n`;\r\nconst ItemImg = styled(ImageSupplier)`\r\n  width: 2.26rem;\r\n  height: 2.26rem;\r\n`;\r\n\r\nconst ItemTh = ({ requestSort, getSortDirection, data }) => {\r\n  const { pageString, itemString } = useLanguage();\r\n\r\n  if (data.length === 0) {\r\n    return <SortableTh>{pageString.items.drop.filter.tableHead[1]}</SortableTh>;\r\n  }\r\n\r\n  return Object.keys(data[0]).map((type, ind) => {\r\n    if (type === \"stage\" || type === \"energy\") {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <ImgTh\r\n        key={type}\r\n        onClick={() => requestSort(type)}\r\n        direction={getSortDirection(type)}\r\n      >\r\n        <TableImg name={`item_${type}`} alt={itemString.name[type]} />\r\n      </ImgTh>\r\n    );\r\n  });\r\n};\r\n\r\nconst ImgTh = styled(SortableTh)`\r\n  &:after {\r\n    position: absolute;\r\n    top: calc(50% - 0.75rem);\r\n    margin-left: 2rem;\r\n  }\r\n`;\r\nconst TableImg = styled(ImageSupplier)`\r\n  width: 1.8rem;\r\n  height: 1.8rem;\r\n`;\r\n\r\nconst TableHead = ({ requestSort, getSortDirection, sortedData }) => {\r\n  const { pageString } = useLanguage();\r\n\r\n  return (\r\n    <MuiTableHead>\r\n      <MuiTableRow>\r\n        <SortableTh\r\n          onClick={() => requestSort(\"stage\")}\r\n          direction={getSortDirection(\"stage\")}\r\n        >\r\n          {pageString.items.drop.filter.tableHead[0]}\r\n        </SortableTh>\r\n        <ItemTh\r\n          requestSort={requestSort}\r\n          getSortDirection={getSortDirection}\r\n          data={sortedData}\r\n        />\r\n        <ImgTh\r\n          onClick={() => requestSort(\"energy\")}\r\n          direction={getSortDirection(\"energy\")}\r\n        >\r\n          <TableImg\r\n            name=\"energy\"\r\n            alt={pageString.items.drop.filter.tableHead[2]}\r\n          />\r\n        </ImgTh>\r\n      </MuiTableRow>\r\n    </MuiTableHead>\r\n  );\r\n};\r\n\r\nconst TableBody = ({ sortedData }) => {\r\n  const { itemString } = useLanguage();\r\n\r\n  return (\r\n    <MuiTableBody>\r\n      {sortedData.map((stage, ind) => {\r\n        return (\r\n          <MuiTableRow hover key={stage.stage}>\r\n            <MuiTableCell>{stage.stage}</MuiTableCell>\r\n            {Object.entries(stage).map(([type, value], ind) => {\r\n              if (type === \"stage\" || type === \"energy\") {\r\n                return null;\r\n              }\r\n\r\n              return (\r\n                <MuiTableCell key={ind}>\r\n                  {itemString.rarity[value]}\r\n                </MuiTableCell>\r\n              );\r\n            })}\r\n            <MuiTableCell>{stage.energy}</MuiTableCell>\r\n          </MuiTableRow>\r\n        );\r\n      })}\r\n    </MuiTableBody>\r\n  );\r\n};\r\n\r\nconst HelpModal = ({ open, onClose }) => {\r\n  const { pageString } = useLanguage();\r\n\r\n  return (\r\n    <TextModal\r\n      title={pageString.items.drop.filter.helpModal.title}\r\n      open={open}\r\n      onClose={onClose}\r\n      content={pageString.items.drop.filter.helpModal.content}\r\n      ariaLabelledby=\"help-modal-title\"\r\n      ariaDescribedby=\"help-modal-description\"\r\n    />\r\n  );\r\n};\r\n\r\nconst toStageKey = (stage) => {\r\n  const splits = stage.split(\"-\");\r\n\r\n  return (\r\n    parseInt(splits[0]) * 1000 +\r\n    parseInt(splits[1].split(\" \")[0]) * 10 +\r\n    (splits[1].includes(\"free\") ? 1 : 0) +\r\n    (splits.length > 2 ? parseInt(splits[2]) : 0)\r\n  );\r\n};\r\n\r\nconst sortFunc = (sortableItems, sortConfig) => {\r\n  sortableItems.sort((a, b) => {\r\n    let aKey;\r\n    let bKey;\r\n    if (sortConfig.key === \"stage\") {\r\n      aKey = toStageKey(a.stage);\r\n      bKey = toStageKey(b.stage);\r\n    } else {\r\n      aKey = a[sortConfig.key];\r\n      bKey = b[sortConfig.key];\r\n    }\r\n    if (aKey < bKey) {\r\n      return sortConfig.direction === \"asc\" ? -1 : 1;\r\n    }\r\n    if (aKey > bKey) {\r\n      return sortConfig.direction === \"asc\" ? 1 : -1;\r\n    }\r\n    return 0;\r\n  });\r\n};\r\n\r\nconst Filter = () => {\r\n  const [state, setState] = useState({\r\n    filterBtnValue: [],\r\n    data: [],\r\n  });\r\n\r\n  const filterBy = (event, val) => {\r\n    if (val.length === 0) {\r\n      setState((state) => ({\r\n        ...state,\r\n        filterBtnValue: val,\r\n        data: [],\r\n      }));\r\n      return;\r\n    }\r\n\r\n    const stageDrop = [].concat(\r\n      ...stageDropData.map((chapter) =>\r\n        chapter.stages.map((stage) => {\r\n          const { materials, trainItems, expPotions, ...rest } = stage;\r\n          return {\r\n            ...rest,\r\n            drops: materials.concat(trainItems, expPotions),\r\n            chapter: chapter.chapter,\r\n          };\r\n        })\r\n      )\r\n    );\r\n\r\n    let filteredStages = stageDrop.filter((stage) =>\r\n      val.every((queryItem) => {\r\n        let flag = false;\r\n        stage.drops.forEach((drop) => {\r\n          if (drop.id === queryItem) {\r\n            flag = true;\r\n            return false;\r\n          }\r\n        });\r\n        return flag;\r\n      })\r\n    );\r\n\r\n    filteredStages = filteredStages.map((stage) => {\r\n      const parsedStage = `${stage.chapter}-${stage.stage}`;\r\n      const newStage = { stage: parsedStage, energy: stage.energy };\r\n      stage.drops.forEach((item) => {\r\n        if (val.includes(item.id)) {\r\n          newStage[item.id] = item.rarity;\r\n        }\r\n      });\r\n      return newStage;\r\n    });\r\n\r\n    setState((state) => ({\r\n      ...state,\r\n      filterBtnValue: val,\r\n      data: filteredStages,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Panels panelsWidth={[\"62%\", \"38%\"]}>\r\n        <ItemFilterPanel\r\n          filterBtnValue={state.filterBtnValue}\r\n          filterBy={filterBy}\r\n          clearBtnValue={(e) => filterBy(e, [])}\r\n        />\r\n        <ResultTablePanel\r\n          data={state.data}\r\n          head={<TableHead />}\r\n          body={<TableBody />}\r\n          sortFunc={sortFunc}\r\n          defaultSortKey={state.filterBtnValue[0]}\r\n          maxHeight=\"calc(100vh - 16rem)\"\r\n          striped\r\n          helpModal={<HelpModal />}\r\n        />\r\n      </Panels>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n"],"names":["TableWrapper","styled","Scrollable","props","$maxHeight","StyledSortableTable","SortableTable","data","head","body","sortFunc","defaultSortKey","maxHeight","striped","headerEnd","helpModal","pageString","useLanguage","open","setOpen","useState","title","items","drop","filter","resultTitle","withHelp","onClickHelp","end","border","React","onClose","itemDropData","stageDropData","chapter","stages","forEach","stage","materials","trainItems","expPotions","rest","item","newDrop","rarity","id","push","i","toString","ItemFilterPanel","filterBtnValue","filterBy","clearBtnValue","userLanguage","itemString","Header","itemPanelTitle","onClick","tooltipText","deleteTooltip","DeleteIcon","ToggleButtonGroup","value","onChange","$lang","$type","Object","entries","map","ind","length","StyledToggleButton","key","ItemImg","name","alt","ToggleButton","ImageSupplier","ItemTh","requestSort","getSortDirection","tableHead","keys","type","ImgTh","direction","TableImg","SortableTh","TableHead","sortedData","TableBody","hover","energy","HelpModal","content","ariaLabelledby","ariaDescribedby","toStageKey","splits","split","parseInt","includes","sortableItems","sortConfig","sort","a","b","aKey","bKey","state","setState","event","val","filteredStages","concat","drops","every","queryItem","flag","newStage","Panels","panelsWidth","e","ResultTablePanel"],"sourceRoot":""}