{"version":3,"file":"component---src-pages-items-drop-index-js-0afb09fe49f7cd3162db.js","mappings":"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","sources":["webpack://tkfmtools/./src/components/Card.js","webpack://tkfmtools/./src/hooks/useWindowList.js","webpack://tkfmtools/./src/components/VariableHeightWindowTable.js","webpack://tkfmtools/./src/pages/items/drop/index.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useLanguage } from \"containers/LanguageProvider\";\r\nimport ImageSupplier from \"components/ImageSupplier\";\r\nimport Table from \"components/Table\";\r\n\r\nexport const ImgCard = ({\r\n  children,\r\n  className,\r\n  imgType,\r\n  imgId,\r\n  alt,\r\n  isBackground,\r\n}) =>\r\n  isBackground ? (\r\n    <StyledImg\r\n      className={className}\r\n      name={`${imgType}_${imgId}`}\r\n      isBackground\r\n      alt={alt}\r\n    >\r\n      {children}\r\n    </StyledImg>\r\n  ) : (\r\n    <ImgWrapper className={className}>\r\n      <StyledImg name={`${imgType}_${imgId}`} alt={alt} />\r\n      {children}\r\n    </ImgWrapper>\r\n  );\r\n\r\nconst StyledImg = styled(ImageSupplier)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  background-repeat: no-repeat;\r\n`;\r\nconst ImgWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const ItemCard = ({ className, id }) => {\r\n  const { itemString } = useLanguage();\r\n\r\n  return (\r\n    <ItemImg className={className} imgType=\"item\" imgId={id} alt=\"\">\r\n      <TextWrapper>{itemString.name[id]}</TextWrapper>\r\n    </ItemImg>\r\n  );\r\n};\r\n\r\nconst ItemImg = styled(ImgCard)`\r\n  > div:first-child {\r\n    width: 2.5rem;\r\n    height: 2.5rem;\r\n    margin-right: 0.4rem;\r\n    user-select: none;\r\n  }\r\n`;\r\nconst TextWrapper = styled.div`\r\n  white-space: nowrap;\r\n  font-size: medium;\r\n  font-weight: normal;\r\n`;\r\n\r\nexport const CardTable = ({ className, children, striped }) => (\r\n  <StyledTable className={className} $striped={striped}>\r\n    {children}\r\n  </StyledTable>\r\n);\r\n\r\nconst StyledTable = styled(Table)`\r\n  .MuiTableCell-root {\r\n    font-size: 0.9rem;\r\n    padding: 0.3rem;\r\n    padding-left: 0.75rem;\r\n  }\r\n`;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nconst getIndicesInWindow = ({\r\n  data,\r\n  scrollTop,\r\n  wrapperHeight,\r\n  findItemIndex,\r\n  overseen,\r\n}) => {\r\n  const scrollBottom = scrollTop + wrapperHeight;\r\n\r\n  const startIndex = Math.max(findItemIndex(scrollTop) - overseen, 0);\r\n  const stopIndex = Math.min(\r\n    findItemIndex(scrollBottom) + overseen,\r\n    data.length - 1\r\n  );\r\n\r\n  // item indices on the window (startIndex, stopIndex)\r\n  const indicesInWindow = Array.from(\r\n    { length: stopIndex - startIndex + 1 },\r\n    (_, i) => i + startIndex\r\n  );\r\n\r\n  return indicesInWindow;\r\n};\r\n\r\nconst useWindowList = ({ data, findItemIndex, overseen }) => {\r\n  const wrapperRef = useRef();\r\n  const wrapperHeight =\r\n    wrapperRef?.current?.getBoundingClientRect().height ?? 0;\r\n\r\n  const [scrollTop, setScrollTop] = useState(0);\r\n\r\n  const [renderIndices, setRenderIndices] = useState(() =>\r\n    getIndicesInWindow({\r\n      data,\r\n      scrollTop,\r\n      wrapperHeight,\r\n      findItemIndex,\r\n      overseen,\r\n    })\r\n  );\r\n\r\n  useEffect(() => {\r\n    setRenderIndices(\r\n      getIndicesInWindow({\r\n        data,\r\n        scrollTop,\r\n        wrapperHeight,\r\n        findItemIndex,\r\n        overseen,\r\n      })\r\n    );\r\n  }, [data, scrollTop, wrapperHeight, findItemIndex, overseen]);\r\n\r\n  const handleScroll = ({ target }) => {\r\n    setScrollTop(target.scrollTop);\r\n  };\r\n\r\n  return { renderIndices, wrapperRef, handleScroll };\r\n};\r\n\r\nexport default useWindowList;\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TableBody } from \"@mui/material\";\r\nimport useSort from \"hooks/useSort\";\r\nimport useWindowList from \"hooks/useWindowList\";\r\nimport Scrollable from \"containers/Scrollable\";\r\nimport Table from \"components/Table\";\r\n\r\nconst TableRows = ({\r\n  data,\r\n  itemsPosition,\r\n  headHeight,\r\n  renderIndices,\r\n  renderRow,\r\n}) =>\r\n  renderIndices.slice(-1)[0] >= data.length || data.length === 0 ? null : (\r\n    <>\r\n      {renderIndices[0] > 0 ? (\r\n        <VirtualRow\r\n          $height={itemsPosition[renderIndices[0] - 1] - headHeight}\r\n          key={data[0].id}\r\n        />\r\n      ) : null}\r\n      {renderIndices.map((i) => (\r\n        <React.Fragment key={data[i].id}>{renderRow(data[i])}</React.Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n\r\nconst findSortedIndex = (arr, value) => {\r\n  let low = 0;\r\n  let high = arr.length;\r\n\r\n  while (low < high) {\r\n    const mid = (low + high) >>> 1;\r\n\r\n    if (arr[mid] < value) low = mid + 1;\r\n    else high = mid;\r\n  }\r\n\r\n  return low;\r\n};\r\n\r\nconst getGeometry = (data, headHeight) => {\r\n  let itemsPosition = Array(data.length);\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    itemsPosition[i] = (itemsPosition[i - 1] ?? headHeight) + data[i].height;\r\n  }\r\n\r\n  let sizerHeight = itemsPosition.slice(-1)[0];\r\n\r\n  return { sizerHeight, itemsPosition };\r\n};\r\n\r\nconst VariableHeightWindowTable = ({\r\n  className,\r\n  head,\r\n  headHeight,\r\n  renderRow,\r\n  data,\r\n  overseen = 5,\r\n  sortFunc,\r\n  defaultSortKey,\r\n  striped,\r\n  border,\r\n}) => {\r\n  const { sortedData, requestSort, getSortDirection } = useSort(\r\n    data,\r\n    sortFunc,\r\n    { key: defaultSortKey, direction: \"desc\" }\r\n  );\r\n\r\n  const { sizerHeight, itemsPosition } = useMemo(\r\n    () => getGeometry(sortedData, headHeight),\r\n    [sortedData, headHeight]\r\n  );\r\n\r\n  const findItemIndex = useCallback(\r\n    (position) => findSortedIndex(itemsPosition, position),\r\n    [itemsPosition]\r\n  );\r\n\r\n  const { renderIndices, wrapperRef, handleScroll } = useWindowList({\r\n    data: sortedData,\r\n    findItemIndex,\r\n    overseen,\r\n  });\r\n\r\n  return (\r\n    <Scrollable className={className} onScroll={handleScroll} ref={wrapperRef}>\r\n      <Sizer $height={sizerHeight}>\r\n        <Table stickyHeader $striped={striped} $border={border} size=\"small\">\r\n          {React.cloneElement(head, {\r\n            requestSort,\r\n            getSortDirection,\r\n          })}\r\n          <TableBody>\r\n            <TableRows\r\n              data={sortedData}\r\n              itemsPosition={itemsPosition}\r\n              headHeight={headHeight}\r\n              renderIndices={renderIndices}\r\n              renderRow={renderRow}\r\n            />\r\n          </TableBody>\r\n        </Table>\r\n      </Sizer>\r\n    </Scrollable>\r\n  );\r\n};\r\n\r\nconst Sizer = styled.div`\r\n  height: ${({ $height }) => $height}px;\r\n  th,\r\n  td {\r\n    white-space: nowrap;\r\n  }\r\n`;\r\n\r\nconst VirtualRow = styled.tr`\r\n  height: ${({ $height }) => $height}px;\r\n`;\r\n\r\nexport default VariableHeightWindowTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  TableHead as MuiTableHead,\r\n  TableBody as MuiTableBody,\r\n  TableRow as MuiTableRow,\r\n  TableCell as MuiTableCell,\r\n} from \"@mui/material\";\r\nimport useWindowSize from \"hooks/useWindowSize\";\r\nimport Scrollable from \"containers/Scrollable\";\r\nimport { useLanguage } from \"containers/LanguageProvider\";\r\nimport IconButton from \"components/IconButton\";\r\nimport { SortableTh } from \"components/SortableTable\";\r\nimport WindowTable from \"components/VariableHeightWindowTable\";\r\nimport { ItemCard } from \"components/Card\";\r\nimport { StyledChip as Chip } from \"components/Chip\";\r\nimport { ScrollableModal } from \"components/Modal\";\r\nimport Header from \"components/Header\";\r\nimport ToggleButtonGroup, { ToggleButton } from \"components/ToggleButtonGroup\";\r\nimport { SettingIcon } from \"components/icon\";\r\nimport stageDropData from \"data/stageDrop.json\";\r\nimport itemData from \"data/item.json\";\r\n\r\nconst TableHead = ({ column, requestSort, getSortDirection }) => {\r\n  const { pageString } = useLanguage();\r\n\r\n  return (\r\n    <MuiTableHead>\r\n      <MuiTableRow>\r\n        {Object.entries(pageString.items.drop.index.tableHead).map(\r\n          ([key, string], ind) => {\r\n            const sortable = key === \"stage\" || key === \"energy\";\r\n\r\n            return ind === 0 || column.includes(ind - 1) ? (\r\n              <StyledTh\r\n                onClick={sortable ? () => requestSort(key) : null}\r\n                direction={sortable ? getSortDirection(key) : null}\r\n                key={string}\r\n                $sortable={sortable}\r\n              >\r\n                {string}\r\n              </StyledTh>\r\n            ) : null;\r\n          }\r\n        )}\r\n      </MuiTableRow>\r\n    </MuiTableHead>\r\n  );\r\n};\r\n\r\nconst StyledTh = styled(SortableTh)`\r\n  && {\r\n    background-color: ${({ theme }) => theme.colors.secondary};\r\n    color: ${({ theme }) => theme.colors.onSecondary};\r\n    ${({ $sortable }) => ($sortable ? \"\" : \"cursor: default;\")}\r\n  }\r\n`;\r\n\r\nconst ItemTd = ({ items, rarity, rank }) => {\r\n  const { itemString } = useLanguage();\r\n\r\n  return (\r\n    <MuiTableCell>\r\n      <ItemsContainer>\r\n        {items &&\r\n          items.length !== 0 &&\r\n          items.map((item) => (\r\n            <ItemWrapper key={item.id}>\r\n              <ItemCard id={item.id} />\r\n              <StyledChip\r\n                $rarity={item.rarity}\r\n                label={itemString.rarity[item.rarity]}\r\n              />\r\n            </ItemWrapper>\r\n          ))}\r\n      </ItemsContainer>\r\n    </MuiTableCell>\r\n  );\r\n};\r\n\r\nconst ItemsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  > div:last-child {\r\n    margin: 0;\r\n  }\r\n`;\r\nconst ItemWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: nowrap;\r\n  margin-right: 0.8rem;\r\n  div {\r\n    flex-wrap: nowrap;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\nconst StyledChip = styled(Chip)`\r\n  && {\r\n    margin-left: 0.4rem;\r\n    background-color: ${({ $rarity }) =>\r\n      $rarity === 0\r\n        ? \"lightgray\"\r\n        : $rarity === 1\r\n        ? \"#90CAF9\"\r\n        : $rarity === 2\r\n        ? \"#A5D6A7\"\r\n        : \"#FFAB91\"};\r\n    color: black;\r\n    font-size: 0.875rem;\r\n  }\r\n`;\r\n\r\nconst TableRow = ({ item, column, rarity, rank }) => {\r\n  const { chapter, stage, energy, materials, trainItems, expPotions } = item;\r\n\r\n  return (\r\n    <MuiTableRow>\r\n      <MuiTableCell>{`${chapter}-${stage}`}</MuiTableCell>\r\n      {Object.values([materials, trainItems, expPotions]).map(\r\n        (v, ind) =>\r\n          v &&\r\n          column.includes(ind) && (\r\n            <ItemTd items={v} rarity={rarity} rank={rank} key={ind} />\r\n          )\r\n      )}\r\n      {column.includes(3) && <MuiTableCell>{energy}</MuiTableCell>}\r\n    </MuiTableRow>\r\n  );\r\n};\r\n\r\nconst TableBody = ({ renderRows, ...props }) => (\r\n  <MuiTableBody>{renderRows(TableRow, props)}</MuiTableBody>\r\n);\r\n\r\nconst ButtonGroupContainer = ({\r\n  filterBtnValue,\r\n  filterBy,\r\n  groupValues,\r\n  strings,\r\n}) => {\r\n  const { userLanguage } = useLanguage();\r\n\r\n  return (\r\n    <StyledContainer>\r\n      <StyledHeader title={strings.title} border />\r\n      <ToggleButtonGroup\r\n        value={filterBtnValue}\r\n        onChange={filterBy}\r\n        $lang={userLanguage}\r\n        $type=\"ITEM_DROPS_TABLE\"\r\n      >\r\n        {groupValues.map((v, ind) => (\r\n          <StyledToggleButton value={v} key={ind}>\r\n            {strings.button[ind]}\r\n          </StyledToggleButton>\r\n        ))}\r\n      </ToggleButtonGroup>\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nconst StyledContainer = styled.div`\r\n  padding: 0.2rem;\r\n`;\r\nconst StyledHeader = styled(Header)`\r\n  margin-top: 1rem;\r\n`;\r\nconst StyledToggleButton = styled(ToggleButton)`\r\n  &&& {\r\n    padding: 0.25rem 0.15rem;\r\n  }\r\n`;\r\n\r\nconst SettingModal = ({ isModalOpen, onClose, filterBy, ...props }) => {\r\n  const { pageString } = useLanguage();\r\n\r\n  return (\r\n    <StyledModal\r\n      title={pageString.items.drop.index.settingModal.title}\r\n      open={isModalOpen}\r\n      onClose={onClose}\r\n      ariaLabelledby=\"setting-modal-title\"\r\n    >\r\n      {Object.entries(BtnGroupsValues).map(([key, values], ind) => (\r\n        <ButtonGroupContainer\r\n          groupValues={values}\r\n          filterBtnValue={props[key]}\r\n          filterBy={filterBy(key)}\r\n          strings={pageString.items.drop.index.settingModal.content[ind]}\r\n          key={ind}\r\n        />\r\n      ))}\r\n    </StyledModal>\r\n  );\r\n};\r\n\r\nconst StyledModal = styled(ScrollableModal)`\r\n  > div:nth-child(3) {\r\n    top: 20%;\r\n    width: 30%;\r\n    @media screen and (max-width: 1300px) {\r\n      width: 40%;\r\n    }\r\n    @media screen and (max-width: 992px) {\r\n      width: 60%;\r\n    }\r\n    @media screen and (max-width: 768px) {\r\n      width: 90%;\r\n    }\r\n    > div:last-child > div:first-child > div {\r\n      margin-top: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Setting = (props) => {\r\n  const { pageString } = useLanguage();\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n  const handleModal = (boolean) => () => setModalOpen(boolean);\r\n\r\n  return (\r\n    <>\r\n      <SettingButtonWrapper>\r\n        <IconButton\r\n          onClick={handleModal(true)}\r\n          tooltipText={pageString.items.drop.index.settingTooltip}\r\n        >\r\n          {SettingIcon}\r\n        </IconButton>\r\n      </SettingButtonWrapper>\r\n      <SettingModal\r\n        {...props}\r\n        isModalOpen={isModalOpen}\r\n        onClose={handleModal(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst SettingButtonWrapper = styled.div`\r\n    position absolute;\r\n    right: 0;\r\n    top: -4rem;\r\n`;\r\n\r\nconst BtnGroupsValues = {\r\n  column: [0, 1, 2, 3],\r\n  rank: [1, 2, 3, 4],\r\n  rarity: [0, 1, 2, 3],\r\n};\r\n\r\nconst toStageKey = (key) =>\r\n  parseInt(key.chapter) * 1000 +\r\n  parseInt(key.stage.split(\" \")[0]) * 10 +\r\n  (key.stage.includes(\"free\") ? 1 : 0) +\r\n  (key.stage.includes(\"-\") ? parseInt(key.stage.split(\"-\")[1]) : 0);\r\n\r\nconst sortFunc = (sortableItems, sortConfig) => {\r\n  sortableItems.sort((a, b) => {\r\n    let aKey;\r\n    let bKey;\r\n    if (sortConfig.key === \"stage\") {\r\n      aKey = toStageKey(a);\r\n      bKey = toStageKey(b);\r\n    } else {\r\n      aKey = a[sortConfig.key];\r\n      bKey = b[sortConfig.key];\r\n    }\r\n    if (aKey < bKey) {\r\n      return sortConfig.direction === \"asc\" ? -1 : 1;\r\n    }\r\n    if (aKey > bKey) {\r\n      return sortConfig.direction === \"asc\" ? 1 : -1;\r\n    }\r\n    return 0;\r\n  });\r\n};\r\n\r\nconst stageDrop = [].concat(\r\n  ...stageDropData.map((chapter) =>\r\n    chapter.stages.map((stage) => ({\r\n      chapter: chapter.chapter,\r\n      ...stage,\r\n    }))\r\n  )\r\n);\r\n\r\nconst getFilteredDropData = ({ column, rank, rarity }, windowWidth) => {\r\n  let filteredDropData = [];\r\n  const rarityAndRankFilter = (item) =>\r\n    rarity.includes(item.rarity) && rank.includes(itemData[item.id].rank);\r\n\r\n  for (let i = 0; i < stageDrop.length; i++) {\r\n    const { materials, trainItems, expPotions, ...rest } = stageDrop[i];\r\n\r\n    const filteredMaterials = column.includes(0)\r\n      ? materials.filter(rarityAndRankFilter)\r\n      : [];\r\n    const filteredTrainItems = column.includes(1)\r\n      ? trainItems.filter(rarityAndRankFilter)\r\n      : [];\r\n    const filteredExpPotions = column.includes(2)\r\n      ? expPotions.filter(rarityAndRankFilter)\r\n      : [];\r\n\r\n    if (\r\n      filteredMaterials.length > 0 ||\r\n      filteredTrainItems.length > 0 ||\r\n      filteredExpPotions.length > 0\r\n    ) {\r\n      const itemNumber = Math.max(\r\n        filteredMaterials.length,\r\n        filteredTrainItems.length,\r\n        filteredExpPotions.length\r\n      );\r\n\r\n      filteredDropData.push({\r\n        ...rest,\r\n        id: `${rest.chapter}-${rest.stage}`,\r\n        materials: filteredMaterials,\r\n        trainItems: filteredTrainItems,\r\n        expPotions: filteredExpPotions,\r\n        // 2.5rem * itemNumber + 13px\r\n        height: 2.5 * 16 * (windowWidth > 490 ? 1 : 0.9) * itemNumber + 13,\r\n      });\r\n    }\r\n  }\r\n\r\n  return filteredDropData;\r\n};\r\n\r\nconst Index = () => {\r\n  const initColumn =\r\n    typeof window !== \"undefined\" && window.innerWidth < 600\r\n      ? [0]\r\n      : BtnGroupsValues.column;\r\n  const [windowWidth, _] = useWindowSize();\r\n\r\n  const [state, setState] = useState(() => ({\r\n    ...BtnGroupsValues,\r\n    column: initColumn,\r\n    dropData: getFilteredDropData(\r\n      {\r\n        column: initColumn,\r\n        rank: BtnGroupsValues.rank,\r\n        rarity: BtnGroupsValues.rarity,\r\n      },\r\n      windowWidth\r\n    ),\r\n  }));\r\n\r\n  const filterBy = (key) => (event, val) => {\r\n    const { column, rank, rarity } = state;\r\n    const newFilter = { column, rank, rarity };\r\n\r\n    newFilter[key] = val;\r\n\r\n    const dropData = getFilteredDropData(newFilter, windowWidth);\r\n\r\n    setState((state) => ({ ...newFilter, dropData }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (windowWidth === 0) return;\r\n\r\n    const { dropData, ...filter } = state;\r\n    const newDropData = getFilteredDropData(filter, windowWidth);\r\n\r\n    setState({ ...filter, dropData: newDropData });\r\n  }, [windowWidth]);\r\n\r\n  return (\r\n    <>\r\n      <Setting\r\n        column={state.column}\r\n        rank={state.rank}\r\n        rarity={state.rarity}\r\n        filterBy={filterBy}\r\n      />\r\n      <ItemTable\r\n        data={state.dropData}\r\n        head={<TableHead column={state.column} />}\r\n        // 3rem + 1px\r\n        headHeight={3 * 16 * (windowWidth > 490 ? 1 : 0.9) + 1}\r\n        renderRow={(item) => (\r\n          <TableRow\r\n            item={item}\r\n            column={state.column}\r\n            rarity={state.rarity}\r\n            rank={state.rank}\r\n          />\r\n        )}\r\n        overseen={10}\r\n        sortFunc={sortFunc}\r\n        defaultSortKey={\"stage\"}\r\n        border\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst ItemTable = styled(WindowTable)`\r\n  overflow-x: auto;\r\n  height: calc(100vh - 11rem);\r\n  padding-right: 0;\r\n  margin-right: 0;\r\n  table {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport default Index;\r\n"],"names":["ImgCard","children","className","imgType","imgId","alt","isBackground","StyledImg","name","ImgWrapper","styled","ImageSupplier","ItemCard","id","itemString","useLanguage","ItemImg","TextWrapper","CardTable","striped","StyledTable","$striped","Table","getIndicesInWindow","data","scrollTop","wrapperHeight","findItemIndex","overseen","scrollBottom","startIndex","Math","max","stopIndex","min","length","Array","from","_","i","wrapperRef","useRef","current","getBoundingClientRect","height","setScrollTop","useState","renderIndices","setRenderIndices","useEffect","handleScroll","target","TableRows","itemsPosition","headHeight","renderRow","slice","VirtualRow","$height","key","map","Sizer","head","sortFunc","defaultSortKey","border","sortedData","requestSort","getSortDirection","useSort","direction","sizerHeight","useMemo","getGeometry","useCallback","position","arr","value","low","high","mid","findSortedIndex","useWindowList","Scrollable","onScroll","ref","stickyHeader","$border","size","React","TableBody","TableHead","column","pageString","Object","entries","items","drop","index","tableHead","ind","string","sortable","includes","StyledTh","onClick","$sortable","SortableTh","theme","colors","secondary","onSecondary","ItemTd","rarity","rank","ItemsContainer","item","ItemWrapper","StyledChip","$rarity","label","Chip","TableRow","chapter","stage","energy","materials","trainItems","expPotions","values","v","ButtonGroupContainer","filterBtnValue","filterBy","groupValues","strings","userLanguage","StyledContainer","StyledHeader","title","ToggleButtonGroup","onChange","$lang","$type","StyledToggleButton","button","Header","ToggleButton","SettingModal","isModalOpen","onClose","props","StyledModal","settingModal","open","ariaLabelledby","BtnGroupsValues","content","ScrollableModal","Setting","setModalOpen","handleModal","boolean","SettingButtonWrapper","IconButton","tooltipText","settingTooltip","SettingIcon","toStageKey","parseInt","split","sortableItems","sortConfig","sort","a","b","aKey","bKey","stageDrop","concat","stageDropData","stages","getFilteredDropData","windowWidth","filteredDropData","rarityAndRankFilter","itemData","rest","filteredMaterials","filter","filteredTrainItems","filteredExpPotions","itemNumber","push","ItemTable","WindowTable","initColumn","window","innerWidth","useWindowSize","state","setState","dropData","newDropData","event","val","newFilter"],"sourceRoot":""}